server:
  port: 8090

#spring:
#  datasource:
#
#    driver_class_name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://127.0.0.1:3306/shop
#    #  url: jdbc:mysql://192.168.0.66:3306/ocserver?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
#    username: root
#    password: root
#    connection_timeout: 30000
#    idleTimeout: 600000
#  read_only: false
#  max-lifetime: 1800000
#  #  maximum_pool_size: 10
#  maximum_pool_size: 50
#  leak_detection_threshold: 300000


spring:
  datasource:
    dbcp1: #第一个数据源
      driver_class_name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://127.0.0.1:3306/shop
      username: root
      password: root
      dialect: mysql

    dbcp2: #第二个数据源
      driver_class_name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://127.0.0.1:3306/shorp1
      username: root
      password: root
      dialect: mysql

    dbcp3: #第三个数据源
      driver_class_name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://127.0.0.1:3306/shop2
      username: root
      password: root
      dialect: mysql

    druid: #druid配置
    # 连接池的配置信息
    # 初始化大小，最小，最大
    initial-size: 5
    min-idle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.test.bean